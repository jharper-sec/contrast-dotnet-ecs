name: Deploy to ECS

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types:
      - completed
    branches: [master]
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag to deploy'
        required: false
        default: 'latest'
  workflow_call:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call' }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Set image tag
      id: set-image
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "IMAGE_TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV
        else
          echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
        fi
    
    - name: Update ECS service
      run: |
        aws ecs update-service \
          --cluster windows-contrast-cluster \
          --service dotnet-framework-contrast-svc \
          --force-new-deployment \
          --region ${{ secrets.AWS_REGION }}
    
    - name: Wait for service to stabilize
      run: |
        aws ecs wait services-stable \
          --cluster windows-contrast-cluster \
          --services dotnet-framework-contrast-svc \
          --region ${{ secrets.AWS_REGION }}