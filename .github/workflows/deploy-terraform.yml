name: Deploy Infrastructure with Terraform

on:
  push:
    branches: [ master ]
    paths:
      - 'aws/terraform/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
  workflow_call:

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./aws/terraform
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'us-east-2'
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
    
    - name: Create terraform.tfvars
      run: |
        cat > terraform.tfvars << EOF
        aws_region = "${{ secrets.AWS_REGION }}"
        vpc_id = "${{ secrets.VPC_ID }}"
        subnet_ids = [${{ secrets.SUBNET_IDS }}]
        contrast_secret_name = "${{ secrets.CONTRAST_SECRET_NAME }}"
        launch_type = "FARGATE"
        os_family = "WINDOWS_SERVER_2022_CORE"
        assign_public_ip = true
        EOF
    
    - name: Terraform Init
      run: terraform init
    
    - name: Terraform Format
      run: terraform fmt -check
    
    - name: Terraform Plan
      run: terraform plan -no-color
      
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
      run: terraform apply -auto-approve